{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain Ballot\\\\frontend\\\\src\\\\pages\\\\Election\\\\StartElection.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * @prettier\r\n */\nimport axios from 'axios';\nimport { useContext, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport Electioneth from '../../ethereum/election';\nimport web3 from '../../ethereum/web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartElection = _ref => {\n  _s();\n\n  let {\n    setLoading\n  } = _ref;\n  const {\n    user,\n    election,\n    notify,\n    validAccount,\n    setUser,\n    getAccount\n  } = useContext(AuthContext);\n\n  const startElectionHandler = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const account = await web3.eth.getAccounts(); //checking if user is using right ethereum account\n\n    if (account[0] !== user.eAddress) {\n      notify('You are using wrong ethereum account', 'error');\n      setLoading(false);\n      return;\n    } //starting election in contract\n\n\n    const Election = Electioneth(election);\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      await Election.methods.startElection().send({\n        from: accounts[0]\n      });\n      notify('Election has been started', 'success');\n    } catch (err) {\n      notify(err.message, 'error');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      //changing electionOngoing to true for all user accounts\n      await axios.get('/election/startElection', {\n        withCredentials: true\n      }); //retrive changed user database\n\n      const response = await axios.get('/election/getUser', {\n        withCredentials: true\n      });\n      setUser(response.data.user);\n    } catch (err) {\n      notify(err.response.data.errMessage, 'error');\n      setLoading(false);\n      return;\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"lg:w-40 md:w-30 md:ml-7 lg:ml-7 ml-6 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-sm text-white bg-indigo-500 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-400\",\n      onClick: startElectionHandler,\n      children: \"Start Election\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(StartElection, \"Q+aUmgmHNi3zdd5ZOOuM9p8hREQ=\");\n\n_c = StartElection;\nexport default StartElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartElection\");","map":{"version":3,"sources":["D:/Blockchain Ballot/frontend/src/pages/Election/StartElection.js"],"names":["axios","useContext","useState","AuthContext","Electioneth","web3","StartElection","setLoading","user","election","notify","validAccount","setUser","getAccount","startElectionHandler","e","preventDefault","account","eth","getAccounts","eAddress","Election","accounts","methods","startElection","send","from","err","message","get","withCredentials","response","data","errMessage"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;;AAEA,MAAMC,aAAa,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA,OAAxC;AAAiDC,IAAAA;AAAjD,MAAgEZ,UAAU,CAACE,WAAD,CAAhF;;AACA,QAAMW,oBAAoB,GAAG,MAAOC,CAAP,IAAa;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMU,OAAO,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAtB,CAJuC,CAKvC;;AACA,QAAIF,OAAO,CAAC,CAAD,CAAP,KAAeT,IAAI,CAACY,QAAxB,EAAkC;AAC/BV,MAAAA,MAAM,CAAC,sCAAD,EAAyC,OAAzC,CAAN;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACF,KAVsC,CAYvC;;;AACA,UAAMc,QAAQ,GAAGjB,WAAW,CAACK,QAAD,CAA5B;AACA,UAAMa,QAAQ,GAAG,MAAMjB,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;;AAEA,QAAI;AACD,YAAME,QAAQ,CAACE,OAAT,CAAiBC,aAAjB,GAAiCC,IAAjC,CAAsC;AACzCC,QAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AAD2B,OAAtC,CAAN;AAGAZ,MAAAA,MAAM,CAAC,2BAAD,EAA8B,SAA9B,CAAN;AACF,KALD,CAKE,OAAOiB,GAAP,EAAY;AACXjB,MAAAA,MAAM,CAACiB,GAAG,CAACC,OAAL,EAAc,OAAd,CAAN;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACF;;AAED,QAAI;AACD;AACA,YAAMP,KAAK,CAAC6B,GAAN,CAAU,yBAAV,EAAqC;AACxCC,QAAAA,eAAe,EAAE;AADuB,OAArC,CAAN,CAFC,CAKD;;AACA,YAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAAC6B,GAAN,CAAU,mBAAV,EAA+B;AACnDC,QAAAA,eAAe,EAAE;AADkC,OAA/B,CAAvB;AAGAlB,MAAAA,OAAO,CAACmB,QAAQ,CAACC,IAAT,CAAcxB,IAAf,CAAP;AACF,KAVD,CAUE,OAAOmB,GAAP,EAAY;AACXjB,MAAAA,MAAM,CAACiB,GAAG,CAACI,QAAJ,CAAaC,IAAb,CAAkBC,UAAnB,EAA+B,OAA/B,CAAN;AACA1B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACF;;AACDA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACF,GA3CD;;AA6CA,sBACG;AAAA,2BACG;AACG,MAAA,SAAS,EAAC,oPADb;AAEG,MAAA,OAAO,EAAEO,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,mBADH;AAUF,CAzDD;;GAAMR,a;;KAAAA,a;AA2DN,eAAeA,aAAf","sourcesContent":["/**\r\n * @prettier\r\n */\r\nimport axios from 'axios';\r\nimport { useContext, useState } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport Electioneth from '../../ethereum/election';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nconst StartElection = ({ setLoading }) => {\r\n   const { user, election, notify, validAccount, setUser, getAccount } = useContext(AuthContext);\r\n   const startElectionHandler = async (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n\r\n      const account = await web3.eth.getAccounts();\r\n      //checking if user is using right ethereum account\r\n      if (account[0] !== user.eAddress) {\r\n         notify('You are using wrong ethereum account', 'error');\r\n         setLoading(false);\r\n         return;\r\n      }\r\n\r\n      //starting election in contract\r\n      const Election = Electioneth(election);\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      try {\r\n         await Election.methods.startElection().send({\r\n            from: accounts[0],\r\n         });\r\n         notify('Election has been started', 'success');\r\n      } catch (err) {\r\n         notify(err.message, 'error');\r\n         setLoading(false);\r\n         return;\r\n      }\r\n\r\n      try {\r\n         //changing electionOngoing to true for all user accounts\r\n         await axios.get('/election/startElection', {\r\n            withCredentials: true,\r\n         });\r\n         //retrive changed user database\r\n         const response = await axios.get('/election/getUser', {\r\n            withCredentials: true,\r\n         });\r\n         setUser(response.data.user);\r\n      } catch (err) {\r\n         notify(err.response.data.errMessage, 'error');\r\n         setLoading(false);\r\n         return;\r\n      }\r\n      setLoading(false);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <button\r\n            className='lg:w-40 md:w-30 md:ml-7 lg:ml-7 ml-6 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-sm text-white bg-indigo-500 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-400'\r\n            onClick={startElectionHandler}\r\n         >\r\n            Start Election\r\n         </button>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default StartElection;\r\n"]},"metadata":{},"sourceType":"module"}