{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain Ballot\\\\frontend\\\\src\\\\pages\\\\Election\\\\EndElection.js\",\n    _s = $RefreshSig$();\n\n/**\r\n * @prettier\r\n */\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport Electioneth from '../../ethereum/election';\nimport Factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EndElection = _ref => {\n  _s();\n\n  let {\n    setLoading\n  } = _ref;\n  const {\n    user,\n    election,\n    notify,\n    validAccount,\n    setUser,\n    setElection,\n    getAccount\n  } = useContext(AuthContext); //fetch api that election has ended\n\n  const navigate = useNavigate();\n\n  const endElectionHandler = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const account = await web3.eth.getAccounts(); //checking if user is using right ethereum account\n\n    if (account[0] !== user.eAddress) {\n      notify('You are using wrong ethereum account', 'error');\n      setLoading(false);\n      return;\n    }\n\n    const Election = Electioneth(election);\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      //end election in Election contract\n      await Election.methods.endElection().send({\n        from: accounts[0]\n      }); //end election in ElectionFactory\n\n      await Factory.methods.clearFactory().send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      notify(err.message, 'error');\n      setLoading(false);\n      navigate('/');\n      return;\n    } //changing electionOngoing to false and hasVoted to false\n\n\n    try {\n      await axios.put('election/endElection', {\n        address: election\n      }, {\n        withCredentials: true\n      }); //get updated user back\n\n      const response = await axios.get('election/getUser', {\n        withCredentials: true\n      });\n      setUser(response.data.user);\n      setElection('0x0000000000000000000000000000000000000000');\n      notify('Election has ended', 'success');\n    } catch (err) {\n      notify(err.response.data.errMessage, 'error');\n      setLoading(false);\n      return;\n    }\n\n    setLoading(false);\n    navigate(`/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endElectionHandler,\n      children: \"End Election\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(EndElection, \"L4IoeXYJ7itnj/RmDNGqn6VAVtE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EndElection;\nexport default EndElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndElection\");","map":{"version":3,"sources":["D:/Blockchain Ballot/frontend/src/pages/Election/EndElection.js"],"names":["axios","useContext","AuthContext","Electioneth","Factory","web3","useNavigate","EndElection","setLoading","user","election","notify","validAccount","setUser","setElection","getAccount","navigate","endElectionHandler","e","preventDefault","account","eth","getAccounts","eAddress","Election","accounts","methods","endElection","send","from","clearFactory","err","message","put","address","withCredentials","response","get","data","errMessage"],"mappings":"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","sourcesContent":["/**\r\n * @prettier\r\n */\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport Electioneth from '../../ethereum/election';\r\nimport Factory from '../../ethereum/factory';\r\nimport web3 from '../../ethereum/web3';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst EndElection = ({ setLoading }) => {\r\n   const { user, election, notify, validAccount, setUser, setElection, getAccount } =\r\n      useContext(AuthContext);\r\n   //fetch api that election has ended\r\n   const navigate = useNavigate();\r\n   const endElectionHandler = async (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      const account = await web3.eth.getAccounts();\r\n      //checking if user is using right ethereum account\r\n      if (account[0] !== user.eAddress) {\r\n         notify('You are using wrong ethereum account', 'error');\r\n         setLoading(false);\r\n         return;\r\n      }\r\n\r\n      const Election = Electioneth(election);\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      try {\r\n         //end election in Election contract\r\n         await Election.methods.endElection().send({\r\n            from: accounts[0],\r\n         });\r\n         //end election in ElectionFactory\r\n         await Factory.methods.clearFactory().send({\r\n            from: accounts[0],\r\n         });\r\n      } catch (err) {\r\n         notify(err.message, 'error');\r\n         setLoading(false);\r\n         navigate('/');\r\n         return;\r\n      }\r\n      //changing electionOngoing to false and hasVoted to false\r\n      try {\r\n         await axios.put(\r\n            'election/endElection',\r\n            {\r\n               address: election,\r\n            },\r\n            {\r\n               withCredentials: true,\r\n            }\r\n         );\r\n         //get updated user back\r\n         const response = await axios.get('election/getUser', {\r\n            withCredentials: true,\r\n         });\r\n         setUser(response.data.user);\r\n         setElection('0x0000000000000000000000000000000000000000');\r\n         notify('Election has ended', 'success');\r\n      } catch (err) {\r\n         notify(err.response.data.errMessage, 'error');\r\n         setLoading(false);\r\n         return;\r\n      }\r\n\r\n      setLoading(false);\r\n      navigate(`/`);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <button onClick={endElectionHandler}>End Election</button>\r\n      </>\r\n   );\r\n};\r\nexport default EndElection;\r\n"]},"metadata":{},"sourceType":"module"}