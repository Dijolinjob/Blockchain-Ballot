{"ast":null,"code":"var _s = $RefreshSig$();\n\n/**\r\n * @prettier\r\n */\nimport { useEffect, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useNavigate } from 'react-router';\nexport const useUserValidation = electionStarted => {\n  _s();\n\n  const {\n    user,\n    notify,\n    election,\n    getAccount\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      notify('Please login first', 'error');\n      navigate('/login');\n    } else {\n      if (user.role !== 'admin') {\n        notify('You do not have access to this route', 'error');\n        navigate(-1);\n        return;\n      } //checking if there is an ongoing election\n\n\n      if (user.electionOngoing === true) {\n        notify('There is already an election in progress', 'error');\n        navigate(-1);\n        return;\n      } //this condition is for /addElection\n\n\n      if (!electionStarted) {\n        if (election !== '0x0000000000000000000000000000000000000000') {\n          notify('You have already started an election', 'error');\n          navigate(-1);\n        }\n      } //this condition is for /addCandidate\n\n\n      if (electionStarted) {\n        if (election === '0x0000000000000000000000000000000000000000') {\n          notify('You need to start and election first', 'error');\n          navigate('/addElection');\n        }\n      } // getAccount() compares the address stored in user with etheremum account address of user\n      // it sets intial value of valid account\n\n\n      getAccount();\n    }\n  }, [user]);\n};\n\n_s(useUserValidation, \"2q+hLb2svvlrCCs5f7LnfLdehso=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"sources":["D:/Blockchain Ballot/frontend/src/components/hooks/user-validation.js"],"names":["useEffect","useContext","AuthContext","useNavigate","useUserValidation","electionStarted","user","notify","election","getAccount","navigate","role","electionOngoing"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAO,MAAMC,iBAAiB,GAAIC,eAAD,IAAqB;AAAA;;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAyCR,UAAU,CAACC,WAAD,CAAzD;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACb,QAAI,CAACM,IAAL,EAAW;AACRC,MAAAA,MAAM,CAAC,oBAAD,EAAuB,OAAvB,CAAN;AACAG,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACF,KAHD,MAGO;AACJ,UAAIJ,IAAI,CAACK,IAAL,KAAc,OAAlB,EAA2B;AACxBJ,QAAAA,MAAM,CAAC,sCAAD,EAAyC,OAAzC,CAAN;AACAG,QAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACA;AACF,OALG,CAMJ;;;AACA,UAAIJ,IAAI,CAACM,eAAL,KAAyB,IAA7B,EAAmC;AAChCL,QAAAA,MAAM,CAAC,0CAAD,EAA6C,OAA7C,CAAN;AACAG,QAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACA;AACF,OAXG,CAYJ;;;AACA,UAAI,CAACL,eAAL,EAAsB;AACnB,YAAIG,QAAQ,KAAK,4CAAjB,EAA+D;AAC5DD,UAAAA,MAAM,CAAC,sCAAD,EAAyC,OAAzC,CAAN;AACAG,UAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACF;AACH,OAlBG,CAmBJ;;;AACA,UAAIL,eAAJ,EAAqB;AAClB,YAAIG,QAAQ,KAAK,4CAAjB,EAA+D;AAC5DD,UAAAA,MAAM,CAAC,sCAAD,EAAyC,OAAzC,CAAN;AACAG,UAAAA,QAAQ,CAAC,cAAD,CAAR;AACF;AACH,OAzBG,CA0BJ;AACA;;;AACAD,MAAAA,UAAU;AACZ;AACH,GAlCQ,EAkCN,CAACH,IAAD,CAlCM,CAAT;AAmCF,CAtCM;;GAAMF,iB;UAEOD,W","sourcesContent":["/**\r\n * @prettier\r\n */\r\nimport { useEffect, useContext } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { useNavigate } from 'react-router';\r\nexport const useUserValidation = (electionStarted) => {\r\n   const { user, notify, election, getAccount } = useContext(AuthContext);\r\n   const navigate = useNavigate();\r\n   useEffect(() => {\r\n      if (!user) {\r\n         notify('Please login first', 'error');\r\n         navigate('/login');\r\n      } else {\r\n         if (user.role !== 'admin') {\r\n            notify('You do not have access to this route', 'error');\r\n            navigate(-1);\r\n            return;\r\n         }\r\n         //checking if there is an ongoing election\r\n         if (user.electionOngoing === true) {\r\n            notify('There is already an election in progress', 'error');\r\n            navigate(-1);\r\n            return;\r\n         }\r\n         //this condition is for /addElection\r\n         if (!electionStarted) {\r\n            if (election !== '0x0000000000000000000000000000000000000000') {\r\n               notify('You have already started an election', 'error');\r\n               navigate(-1);\r\n            }\r\n         }\r\n         //this condition is for /addCandidate\r\n         if (electionStarted) {\r\n            if (election === '0x0000000000000000000000000000000000000000') {\r\n               notify('You need to start and election first', 'error');\r\n               navigate('/addElection');\r\n            }\r\n         }\r\n         // getAccount() compares the address stored in user with etheremum account address of user\r\n         // it sets intial value of valid account\r\n         getAccount();\r\n      }\r\n   }, [user]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}